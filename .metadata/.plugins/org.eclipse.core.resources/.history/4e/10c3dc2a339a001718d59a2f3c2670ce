class  problem1{
 
    static Node head;
 
    static class Node {
 
        int data;
        Node next;
 
        Node(int d) {
            data = d;
            next = null;
        }
    }
 
    /* Function to reverse the linked list */
    Node reverse(Node node) {
    	Node currentNode = node;
    	Node previousNode = null;
    	Node nextNode = null;
    	while (currentNode != null){
    		nextNode = currentNode.next;
    		currentNode.next = previousNode;
    		previousNode = currentNode;
    		currentNode = nextNode;
    	}
    	return previousNode;
    }
 
    // prints content of double linked list
    void printList(Node node) {
        while (node != null) {
            System.out.print(node.data + " ");
            node = node.next;
        }
    }
 
    public static void main(String[] args) {
    	problem1 list = new problem1();
        list.head = new Node(85);
        list.head.next = new Node(15);
        list.head.next.next = new Node(4);
        list.head.next.next.next = new Node(20);
        list.head.next.next.next.next = new Node(55);
        list.head.next.next.next.next.next = new Node(77);
        list.head.next.next.next.next.next.next = new Node(99);
         
        System.out.println("Given Linked list");
        list.printList(head);
        head = list.reverse(head);
        System.out.println("");
        System.out.println("Reversed linked list ");
        list.printList(head);
    }
}
 

